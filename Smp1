-----------------------
-- VARIABLES & SERVICES
-----------------------
local V = {
    -- Libraries
    Lib = loadstring(game:HttpGet('https://raw.githubusercontent.com/xzcReasd/scripts/refs/heads/main/Library'))(),
    Theme = loadstring(game:HttpGet('https://raw.githubusercontent.com/xzcReasd/scripts/refs/heads/main/ThemeManager'))(),
    Save = loadstring(game:HttpGet('https://raw.githubusercontent.com/xzcReasd/scripts/refs/heads/main/SaveManager'))(),
    
    -- Services
    Players = game:GetService("Players"),
    UIS = game:GetService("UserInputService"),
    RS = game:GetService("RunService"),
    WS = workspace,
    
    -- Objects
    LP = game:GetService("Players").LocalPlayer,
    Cam = workspace.CurrentCamera,
    
    -- Math/Utility
    V2 = Vector2.new,
    V3 = Vector3.new,
    CF = CFrame.new,
    math = math,
    
    -- Current target
    Target = nil
}
-- Setup libraries
V.Theme:SetLibrary(V.Lib)
V.Save:SetLibrary(V.Lib)

-- Create window
local Win = V.Lib:CreateWindow({
    Title = 'SimpleBot | Really simple | ' .. os.date('%d.%m.%Y'),
    Themeable = true,
    Info = 'SimpleBot',
    Center = true,
    AutoShow = true
})

-- Create tabs
local Tabs = {
    Aimbot = Win:AddTab('Aimbot'),
    Misc = Win:AddTab('Misc'),
    Player = Win:AddTab('Player'),
    Visuals = Win:AddTab('Visuals'),
    Config = Win:AddTab('Config')
}

-----------------------
-- CONFIG
-----------------------
local Config = {
    Aimbot = {
        Enabled = true,
        StickyKey = Enum.KeyCode.Q,
        SkipCovered = false,
        SkipKnocked = false,
        SkipGrabbed = false,
        ResetKnocked = false,
        ResetGrabbed = false,
        ResetDeath = false
    }
}

-----------------------
-- UTILITY FUNCTIONS
-----------------------
local function UpdateTarget(target)
    if not target then
        V.Target = nil
        return
    end

    if not target:IsA("Player") or not target.Character then
        V.Target = {
            player = target,
            name = target.Name,
            displayName = target.DisplayName or target.Name,
            character = nil,
            humanoid = nil,
            root = nil,
            r15 = nil,
            position = nil,
            cframe = nil,
            velocity = nil,
            walkspeed = nil,
            distance = nil,
            health = nil,
            maxHealth = nil,
            team = target.Team or nil,
            isAlive = false
        }
        return
    end

    if not target.Character:FindFirstChild("HumanoidRootPart") or not target.Character:FindFirstChildOfClass("Humanoid") then
        V.Target = {
            player = target,
            name = target.Name,
            displayName = target.DisplayName or target.Name,
            character = target.Character,
            humanoid = nil,
            root = nil,
            r15 = nil,
            position = nil,
            cframe = nil,
            velocity = nil,
            walkspeed = nil,
            distance = nil,
            health = nil,
            maxHealth = nil,
            team = target.Team or nil,
            isAlive = false
        }
        return
    end

    -- Build r15 parts table inline
    V.Target = {
        player = target,
        name = target.Name,
        displayName = target.DisplayName or target.Name,
        character = target.Character,
        humanoid = target.Character:FindFirstChildOfClass("Humanoid"),
        root = target.Character:FindFirstChild("HumanoidRootPart"),
        r15 = (function()
            local parts = {}
            for _, part in ipairs({"Head", "UpperTorso", "LowerTorso", "LeftUpperArm", "LeftLowerArm", "LeftHand", "RightUpperArm", "RightLowerArm", "RightHand", "LeftUpperLeg", "LeftLowerLeg", "LeftFoot", "RightUpperLeg", "RightLowerLeg", "RightFoot", "HumanoidRootPart"}) do
                local p = target.Character:FindFirstChild(part)
                if p then parts[part] = p end
            end
            return parts
        end)(),
        position = target.Character:FindFirstChild("HumanoidRootPart").Position,
        cframe = target.Character:FindFirstChild("HumanoidRootPart").CFrame,
        velocity = target.Character:FindFirstChild("HumanoidRootPart").Velocity,
        walkspeed = target.Character:FindFirstChildOfClass("Humanoid").WalkSpeed,
        distance = V.LP.Character and V.LP.Character:FindFirstChild("HumanoidRootPart") and (target.Character:FindFirstChild("HumanoidRootPart").Position - V.LP.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude or 0,
        health = target.Character:FindFirstChildOfClass("Humanoid").Health,
        maxHealth = target.Character:FindFirstChildOfClass("Humanoid").MaxHealth,
        team = target.Team or nil,
        isAlive = target.Character:FindFirstChildOfClass("Humanoid").Health > 0
    }
end

local function IsVisible(targetRoot)
    if not Config.Aimbot.SkipCovered then return true end
    
    return V.WS:Raycast(V.Cam.CFrame.Position, (targetRoot.Position - V.Cam.CFrame.Position), (function()
        local params = RaycastParams.new()
        params.FilterDescendantsInstances = {V.LP.Character, targetRoot.Parent}
        params.FilterType = Enum.RaycastFilterType.Blacklist
        return params
    end)()) == nil
end

local function IsPlayerKO(player)
    return player and player.Character and player.Character:FindFirstChild("BodyEffects") and 
           player.Character.BodyEffects:FindFirstChild("K.O") and player.Character.BodyEffects["K.O"].Value and 
           (not player.Character.BodyEffects:FindFirstChild("Grabbed") or not player.Character.BodyEffects.Grabbed.Value)
end

local function IsPlayerGrabbed(player)
    return player and player.Character and player.Character:FindFirstChild("BodyEffects") and 
           player.Character.BodyEffects:FindFirstChild("Grabbed") and player.Character.BodyEffects.Grabbed.Value
end

local function GetClosestPlayerToCursor()
    local closestPlayer, shortestDistance = nil, V.math.huge

    for _, player in ipairs(V.Players:GetPlayers()) do
        if player ~= V.LP and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local screenPoint, onScreen = V.Cam:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            if onScreen then
                local distance = (V.V2(screenPoint.X, screenPoint.Y) - V.V2(V.UIS:GetMouseLocation().X, V.UIS:GetMouseLocation().Y)).Magnitude
                if (not Config.Aimbot.SkipCovered or IsVisible(player.Character.HumanoidRootPart))
                    and (not Config.Aimbot.SkipKnocked or not IsPlayerKO(player))
                    and (not Config.Aimbot.SkipGrabbed or not IsPlayerGrabbed(player))
                    and distance < shortestDistance then
                    shortestDistance, closestPlayer = distance, player
                end
            end
        end
    end
    return closestPlayer
end

-----------------------
-- AIMBOT SYSTEM
-----------------------
local function OnInputBegan(input, gameProcessed)
    if not Config.Aimbot.Enabled or gameProcessed or input.KeyCode ~= Config.Aimbot.StickyKey then return end
    
    if V.Target then
        V.Target = nil
        print("Цель сброшена (вручную)")
    else
        local closest = GetClosestPlayerToCursor()
        if closest then
            UpdateTarget(closest)
            print("Выбрана цель: " .. closest.Name)
        else
            print("Не найдено подходящих целей")
        end
    end
end

-----------------------
-- AIMBOT UI
-----------------------

local TargetingBox = Tabs.Aimbot:AddLeftGroupbox('Targeting')

TargetingBox:AddToggle('AimbotEnabled', {
    Text = 'Enabled',
    Default = true,
    Tooltip = 'Включить/выключить систему захвата цели',
    Callback = function(Value)
        Config.Aimbot.Enabled = Value
        print('[Aimbot] Targeting ' .. (Value and 'включен' or 'выключен'))
    end
})

TargetingBox:AddLabel('Sticky Key'):AddKeyPicker('StickyKeybind', {
    Default = 'Q',
    SyncToggleState = false,
    Text = 'Sticky Target',
    NoUI = false,
    Tooltip = 'Клавиша для захвата/сброса цели',
    ChangedCallback = function(New)
        -- New приходит строкой типа 'Q' или 'MouseButton1'
        local kc = Enum.KeyCode[New] or Enum.KeyCode.Unknown
        if kc ~= Enum.KeyCode.Unknown then
            Config.Aimbot.StickyKey = kc
            print('[Aimbot] Sticky keybind изменен на:', New)
        else
            warn('[Aimbot] Некорректный keybind:', New)
        end
    end
})

-----------------------
-- SKIP SETTINGS UI
-----------------------

local SkipBox = Tabs.Aimbot:AddRightGroupbox('Skip')
SkipBox:AddToggle('SkipCovered', {
    Text = 'Skip Covered',
    Default = false,
    Tooltip = 'Пропускать игроков, которые находятся за стеной',
    Callback = function(v)
        Config.Aimbot.SkipCovered = v
    end
})

SkipBox:AddToggle('SkipKnocked', {
    Text = 'Skip Knocked',
    Default = false,
    Tooltip = 'Пропускать игроков, которые в нокауте',
    Callback = function(v)
        Config.Aimbot.SkipKnocked = v
    end
})

SkipBox:AddToggle('SkipGrabbed', {
    Text = 'Skip Grabbed',
    Default = false,
    Tooltip = 'Пропускать игроков, которых держат',
    Callback = function(v)
        Config.Aimbot.SkipGrabbed = v
    end
})

-----------------------
-- RESET TARGET ON UI
-----------------------

local ResetBox = Tabs.Aimbot:AddRightGroupbox('ResetTargetON')
ResetBox:AddToggle('ResetKnocked', {
    Text = 'Knocked',
    Default = false,
    Tooltip = 'Сбрасывать цель, если она нокаутирована',
    Callback = function(v)
        Config.Aimbot.ResetKnocked = v
    end
})
ResetBox:AddToggle('ResetGrabbed', {
    Text = 'Grabbed',
    Default = false,
    Tooltip = 'Сбрасывать цель, если её схватили',
    Callback = function(v)
        Config.Aimbot.ResetGrabbed = v
    end
})
ResetBox:AddToggle('ResetDeath', {
    Text = 'Death',
    Default = false,
    Tooltip = 'Сбрасывать цель при смерти',
    Callback = function(v)
        Config.Aimbot.ResetDeath = v
    end
})

local function AutoResetTarget()
    if not V.Target or not V.Target.player then return end
    
    if (Config.Aimbot.ResetKnocked and IsPlayerKO(V.Target.player)) or
       (Config.Aimbot.ResetGrabbed and IsPlayerGrabbed(V.Target.player)) or
       (Config.Aimbot.ResetDeath and (not V.Target.player.Character or not V.Target.player.Character:FindFirstChildOfClass('Humanoid') or V.Target.player.Character:FindFirstChildOfClass('Humanoid').Health <= 0)) then
        print('[ResetTarget] Сброс цели')
        V.Target = nil
    end
end

-----------------------
-- CONNECTIONS
-----------------------
V.RS.RenderStepped:Connect(AutoResetTarget)
V.UIS.InputBegan:Connect(OnInputBegan)
V.Save:BuildConfigSection(Tabs.Config)
local ThemeBox = Tabs.Config:AddLeftGroupbox('')
V.Theme:ApplyToGroupbox(ThemeBox)
V.Theme:LoadDefault()
V.Save:LoadAutoloadConfig()
